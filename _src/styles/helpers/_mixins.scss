// =======================================================================
// Mixins
// =======================================================================

// Utility mixin for make-font-size
@mixin make-font-size($fs-font-size) {
	// If $fs-font-size is a list, include both font-size and line-height
	@if type-of($fs-font-size) == "list" {
		font-size: nth($fs-font-size, 1);
		@if (length($fs-font-size) > 1) {
			line-height: nth($fs-font-size, 2);
		}
		@else {
			font-size: $fs-font-size;
		}
	}
}

// Font Sizer
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
	@each $fs-breakpoint, $fs-font-size in $fs-map {
		@if $fs-breakpoint == null {
			@include make-font-size($fs-font-size);
		}
		@else {
			// If $fs-font-size is a key that exists in $fs-breakpoints, use the value
			@if map-has-key($fs-breakpoints, $fs-breakpoint) {
				$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
			}
			@media screen and (min-width: $fs-breakpoint) {
				@include make-font-size($fs-font-size);
			}
		}
	}
}

// Font sizes
@mixin fs__mega {
	font-size: 2rem; //32px
	@media(min-width: map-get($breakpoints, medium)) {
		font-size: 2.25rem; //36px
	}
}
@mixin fs__maxi {
	font-size: 1.375rem; //22px
	@media(min-width: map-get($breakpoints, medium)) {
		font-size: 1.5rem; //24px
	}
}
@mixin fs__midi {
	font-size: 1.125rem; //18px
	@media(min-width: map-get($breakpoints, medium)) {
		font-size: 1.25rem; //20px
	}
}
@mixin fs__base {
	font-size: 1rem; //16px
	@media(min-width: map-get($breakpoints, medium)) {
		font-size: 1.125rem; //18px
	}
}
@mixin fs__mini {
	font-size: 0.875rem; //14px
}
@mixin fs__micro {
	font-size: 0.75rem; //12px
}